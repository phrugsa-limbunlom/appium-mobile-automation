package test_case;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import config.AppiumConfig;
import io.appium.java_client.AppiumBy;
import io.appium.java_client.AppiumDriver;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.android.options.UiAutomator2Options;

public class StartAppENTest {

    private static AppiumDriver driver;
    private static WebDriverWait wait;

    @BeforeEach
    public void setUp() throws MalformedURLException {

        UiAutomator2Options options = AppiumConfig.getOptions();

        driver = new AndroidDriver(new URL("http://127.0.0.1:4723"), options);
        // Set implicit wait timeout to 10 seconds
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
        // Set explicit wait timeout to 10 seconds
        wait = new WebDriverWait(driver, Duration.ofSeconds(10));

    }

    @Test
    public void successfully_pass_the_welcome_page_with_English_language() {
        WebElement allow_button = wait.until(ExpectedConditions.elementToBeClickable(AppiumBy.id("<ID>")));
        allow_button.click();

        // Find element by accessibility ID
        WebElement element_lan = wait.until(ExpectedConditions.presenceOfElementLocated(
                AppiumBy.accessibilityId("<ID>")
        ));

        // Perform actions on the element
        Assertions.assertTrue(element_lan.isDisplayed(), "Element should be visible");
        element_lan.click();

        WebElement element_start = wait.until(ExpectedConditions.presenceOfElementLocated(
                AppiumBy.accessibilityId("<ID>")
        ));

        Assertions.assertTrue(element_start.isDisplayed(), "Element should be visible");
        element_start.click();

        for (int i = 0; i < 3; i++) {
            WebElement element_next = wait.until(ExpectedConditions.presenceOfElementLocated(
                    AppiumBy.accessibilityId("<ID>")
            ));

            Assertions.assertTrue(element_next.isDisplayed(), "Element should be visible");
            element_next.click();
        }

        WebElement element_start2 = wait.until(ExpectedConditions.presenceOfElementLocated(
                AppiumBy.accessibilityId("<ID>")
        ));

        Assertions.assertTrue(element_start2.isDisplayed(), "Element should be visible");
        element_start2.click();

        // Shortcut
        for (int i = 1; i <= 6; i++) {

            if (i == 6) {
                WebElement complete = wait.until(ExpectedConditions.presenceOfElementLocated(
                        AppiumBy.accessibilityId("<ID>")
                ));
                complete.click();
            } else {
                WebElement shortcut_next = wait.until(ExpectedConditions.presenceOfElementLocated(
                        AppiumBy.accessibilityId("<ID>")
                ));
                Assertions.assertTrue(shortcut_next.isDisplayed(), "Element should be visible");
                shortcut_next.click();
            }
        }

        // Start with Login
        WebElement start_with_login = wait.until(ExpectedConditions.presenceOfElementLocated(
                AppiumBy.accessibilityId("<ID>")
        ));
        start_with_login.click();
    }

    @Test
    public void successfully_pass_the_welcome_page_with_skip_button() {
        WebElement allow_button = wait.until(ExpectedConditions.elementToBeClickable(AppiumBy.id("com.android.permissioncontroller:id/permission_allow_button")));
        allow_button.click();

        WebElement element_lan = wait.until(ExpectedConditions.presenceOfElementLocated(
                AppiumBy.accessibilityId("<ID>")
        ));

        // Perform actions on the element
        Assertions.assertTrue(element_lan.isDisplayed(), "Element should be visible");
        element_lan.click();

        WebElement element_start = wait.until(ExpectedConditions.presenceOfElementLocated(
                AppiumBy.accessibilityId("<ID>")
        ));

        element_start.click();
        for (int i = 0; i < 2; i++) {
            WebElement skip_button = wait.until(ExpectedConditions.presenceOfElementLocated(
                    AppiumBy.accessibilityId("<ID>")
            ));
            skip_button.click();
        }

        WebElement start_with_login = wait.until(ExpectedConditions.presenceOfElementLocated(
                AppiumBy.accessibilityId("<ID>")
        ));
        start_with_login.click();

    }

    @AfterEach
    public void tearDown() {
        if (driver != null) {
            driver.quit();
        }
    }
}
